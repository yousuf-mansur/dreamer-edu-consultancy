// <auto-generated />
using System;
using DreamEduConsultancy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DreamEduConsultancy.Migrations
{
    [DbContext(typeof(DreamDbContext))]
    partial class DreamDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("sqNumeric")
                .IncrementsBy(10)
                .HasMin(0L)
                .HasMax(500L)
                .IsCyclic();

            modelBuilder.Entity("DreamEduConsultancy.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("applicationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateOnly>("ApplicationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("applicationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ApplicationStatusId")
                        .HasColumnType("int")
                        .HasColumnName("applicationStatusId");

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("countryId");

                    b.Property<int>("IntakeId")
                        .HasColumnType("int")
                        .HasColumnName("intakeId");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("studentId");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subjectId");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int")
                        .HasColumnName("universityId");

                    b.HasKey("ApplicationId")
                        .HasName("PK__applicat__79FDB1CFE2F65E13");

                    b.HasIndex("ApplicationStatusId");

                    b.HasIndex("CountryId");

                    b.HasIndex("IntakeId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UniversityId");

                    b.HasIndex(new[] { "StudentId", "UniversityId", "SubjectId" }, "UQ_studentApplication")
                        .IsUnique();

                    b.HasIndex(new[] { "ApplicationDate" }, "idx_applicationDate");

                    b.HasIndex(new[] { "ApplicationId" }, "idx_applicationId");

                    b.ToTable("application", null, t =>
                        {
                            t.HasTrigger("trApplicationRecord");

                            t.HasTrigger("trApplicationStatus");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.ApplicationReason", b =>
                {
                    b.Property<int>("ApplicationReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("applicationReasonId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationReasonId"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("applicationId");

                    b.Property<int>("VisaReasonId")
                        .HasColumnType("int")
                        .HasColumnName("visaReasonId");

                    b.HasKey("ApplicationReasonId")
                        .HasName("PK__applicat__49672E9BA9038270");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("VisaReasonId");

                    b.ToTable("applicationReason", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.ApplicationStatus", b =>
                {
                    b.Property<int>("ApplicationStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("applicationStatusId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationStatusId"));

                    b.Property<string>("ApplicationStatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("applicationStatusName");

                    b.HasKey("ApplicationStatusId")
                        .HasName("PK__applicat__1D6A3E7655F9E822");

                    b.ToTable("applicationStatus", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.ApplicationUpdateLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("logId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("applicationId");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("updatedBy");

                    b.HasKey("LogId")
                        .HasName("PK__applicat__7839F64D567396A7");

                    b.HasIndex("ApplicationId");

                    b.ToTable("applicationUpdateLog", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Counselor", b =>
                {
                    b.Property<int>("CounselorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("counselorId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CounselorId"));

                    b.Property<string>("CounselorFname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("counselorFName");

                    b.Property<string>("CounselorFullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("counselorFullName")
                        .IsFixedLength();

                    b.Property<string>("CounselorLname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("counselorLName");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int")
                        .HasColumnName("designationId");

                    b.HasKey("CounselorId")
                        .HasName("PK__counselo__237F0883D27DC7BB");

                    b.HasIndex("DesignationId");

                    b.HasIndex(new[] { "CounselorFname", "CounselorLname" }, "UQ_counselorName")
                        .IsUnique();

                    b.ToTable("counselor", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.CounselorStudent", b =>
                {
                    b.Property<int>("CounselorStudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("counselorStudentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CounselorStudentId"));

                    b.Property<DateOnly>("AssignedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("assignedDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CounselorId")
                        .HasColumnType("int")
                        .HasColumnName("counselorId");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("studentId");

                    b.HasKey("CounselorStudentId")
                        .HasName("PK__counselo__B1BC2371854703CD");

                    b.HasIndex("StudentId");

                    b.HasIndex(new[] { "CounselorId", "StudentId" }, "UQ_counselorStudent")
                        .IsUnique();

                    b.ToTable("counselorStudent", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("countryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("countryName");

                    b.HasKey("CountryId")
                        .HasName("PK__country__D32076BC7C66F7B8");

                    b.HasIndex(new[] { "CountryId" }, "idx_countryId");

                    b.ToTable("country", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("courseId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("courseName");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("description");

                    b.HasKey("CourseId")
                        .HasName("PK__course__2AA84FD12A57843A");

                    b.ToTable("course", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("designationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesignationId"));

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("designationName");

                    b.HasKey("DesignationId")
                        .HasName("PK__designat__197CE32AE3606AB9");

                    b.ToTable("designation", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("documentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("description");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("documentName");

                    b.HasKey("DocumentId")
                        .HasName("PK__document__EFAAAD855AACDC45");

                    b.ToTable("document", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("genderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("genderName");

                    b.HasKey("GenderId")
                        .HasName("PK__gender__306E22409F5F05F1");

                    b.ToTable("gender", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Intake", b =>
                {
                    b.Property<int>("IntakeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("intakeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntakeId"));

                    b.Property<DateOnly>("IntakeDate")
                        .HasColumnType("date")
                        .HasColumnName("intakeDate");

                    b.Property<string>("IntakeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("intakeName");

                    b.HasKey("IntakeId")
                        .HasName("PK__intake__0F690089EE7FEDDE");

                    b.ToTable("intake", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("paymentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("applicationId");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("paymentAmount");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date")
                        .HasColumnName("paymentDate");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("paymentMethod");

                    b.HasKey("PaymentId")
                        .HasName("PK__payment__A0D9EFC673C01254");

                    b.HasIndex("ApplicationId");

                    b.ToTable("payment", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Scholarship", b =>
                {
                    b.Property<int>("ScholarshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("scholarshipId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScholarshipId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("description");

                    b.Property<string>("ScholarshipName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("scholarshipName");

                    b.HasKey("ScholarshipId")
                        .HasName("PK__scholars__B8F36A2244C7EEEE");

                    b.ToTable("scholarship", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("studentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletedAt");

                    b.Property<string>("Email")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("email");

                    b.Property<int>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("genderId");

                    b.Property<decimal>("LastMarks")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("lastMarks");

                    b.Property<string>("LastStudyLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastStudyLevel");

                    b.Property<string>("Nid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("nid")
                        .IsFixedLength();

                    b.Property<DateOnly?>("PassExDate")
                        .HasColumnType("date")
                        .HasColumnName("passExDate");

                    b.Property<string>("PassportId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("passportId");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("phone")
                        .IsFixedLength();

                    b.Property<string>("StudentFname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("studentFName");

                    b.Property<string>("StudentLname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("studentLName");

                    b.HasKey("StudentId")
                        .HasName("PK__student__4D11D63C36550460");

                    b.HasIndex("GenderId");

                    b.HasIndex(new[] { "Email" }, "UQ__student__AB6E6164AC5C8903")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex(new[] { "Phone" }, "UQ__student__B43B145FB7617FDD")
                        .IsUnique()
                        .HasFilter("[phone] IS NOT NULL");

                    b.HasIndex(new[] { "Nid" }, "UQ__student__DF97D0F438CBAD7A")
                        .IsUnique()
                        .HasFilter("[nid] IS NOT NULL");

                    b.HasIndex(new[] { "StudentId" }, "idx_studentID");

                    b.ToTable("student", null, t =>
                        {
                            t.HasTrigger("trLogStudentUpdates");

                            t.HasTrigger("trPreventDuplicateStudents");

                            t.HasTrigger("trRestrictDelete");

                            t.HasTrigger("trRestrictPassportExpiry");

                            t.HasTrigger("trSoftDelete");

                            t.HasTrigger("trStudentRecordManage");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("studentCourseId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentCourseId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseId");

                    b.Property<decimal?>("Grade")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("grade");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("studentId");

                    b.HasKey("StudentCourseId")
                        .HasName("PK__studentC__5A4F4B33E4DCF593");

                    b.HasIndex("CourseId");

                    b.HasIndex(new[] { "StudentId", "CourseId" }, "UQ_studentCourse")
                        .IsUnique();

                    b.ToTable("studentCourse", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.StudentDocument", b =>
                {
                    b.Property<int>("StudentDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("studentDocumentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentDocumentId"));

                    b.Property<int>("DocumentId")
                        .HasColumnType("int")
                        .HasColumnName("documentId");

                    b.Property<string>("DocumentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("documentStatus");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("studentId");

                    b.Property<DateOnly>("SubmissionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("submissionDate")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("StudentDocumentId")
                        .HasName("PK__studentD__76E55BDC58375288");

                    b.HasIndex("DocumentId");

                    b.HasIndex(new[] { "StudentId", "DocumentId" }, "UQ_studentDocument")
                        .IsUnique();

                    b.ToTable("studentDocument", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.StudentScholarship", b =>
                {
                    b.Property<int>("StudentScholarshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("studentScholarshipId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentScholarshipId"));

                    b.Property<DateOnly>("AwardDate")
                        .HasColumnType("date")
                        .HasColumnName("awardDate");

                    b.Property<int>("ScholarshipId")
                        .HasColumnType("int")
                        .HasColumnName("scholarshipId");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("studentId");

                    b.HasKey("StudentScholarshipId")
                        .HasName("PK__studentS__CBBEA6A77979D850");

                    b.HasIndex("ScholarshipId");

                    b.HasIndex(new[] { "StudentId", "ScholarshipId" }, "UQ_studentScholarship")
                        .IsUnique();

                    b.ToTable("studentScholarship", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.StudentUpdateLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("logId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("studentId");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("updatedBy");

                    b.HasKey("LogId")
                        .HasName("PK__studentU__7839F64D2F710B0A");

                    b.HasIndex("StudentId");

                    b.ToTable("studentUpdateLog", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subjectId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("subjectName");

                    b.HasKey("SubjectId")
                        .HasName("PK__subject__ACF9A760BCEA0091");

                    b.ToTable("subject", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.University", b =>
                {
                    b.Property<int>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("universityId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniversityId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("countryId");

                    b.Property<string>("UniversityName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("universityName");

                    b.HasKey("UniversityId")
                        .HasName("PK__universi__F5A408802D1C7984");

                    b.HasIndex("CountryId");

                    b.HasIndex(new[] { "UniversityName", "CountryId" }, "UQ_university")
                        .IsUnique();

                    b.ToTable("university", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.UniversityCourse", b =>
                {
                    b.Property<int>("UniversityCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("universityCourseId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniversityCourseId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseId");

                    b.Property<decimal?>("UniversityCourseFee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("universityCourseFee");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int")
                        .HasColumnName("universityId");

                    b.HasKey("UniversityCourseId")
                        .HasName("PK__universi__F6A76FC811FC78AE");

                    b.HasIndex("CourseId");

                    b.HasIndex(new[] { "UniversityId", "CourseId" }, "UQ_universityCourse")
                        .IsUnique();

                    b.ToTable("universityCourse", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.VisaApplication", b =>
                {
                    b.Property<int>("VisaApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("visaApplicationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisaApplicationId"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("applicationId");

                    b.Property<DateOnly?>("DecisionDate")
                        .HasColumnType("date")
                        .HasColumnName("decisionDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateOnly>("SubmissionDate")
                        .HasColumnType("date")
                        .HasColumnName("submissionDate");

                    b.Property<string>("VisaType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("visaType");

                    b.HasKey("VisaApplicationId")
                        .HasName("PK__visaAppl__82522E1C9D232C9F");

                    b.HasIndex("ApplicationId");

                    b.ToTable("visaApplication", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.VisaReason", b =>
                {
                    b.Property<int>("VisaReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("visaReasonId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisaReasonId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletedAt");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("description");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("VisaReasonName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("visaReasonName");

                    b.HasKey("VisaReasonId")
                        .HasName("PK__visaReas__6CE74CD39603920F");

                    b.ToTable("visaReason", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.VwStudentInformation", b =>
                {
                    b.Property<DateOnly>("ApplicationDate")
                        .HasColumnType("date");

                    b.Property<string>("ApplicationStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Intake")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("LastAcademicMarks")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastStudyLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("NID")
                        .IsFixedLength();

                    b.Property<DateOnly?>("PassportExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("studentId");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("University")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vwStudentInformation", (string)null);
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Application", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.ApplicationStatus", "ApplicationStatus")
                        .WithMany("Applications")
                        .HasForeignKey("ApplicationStatusId")
                        .IsRequired()
                        .HasConstraintName("FK__applicati__appli__59FA5E80");

                    b.HasOne("DreamEduConsultancy.Models.Country", "Country")
                        .WithMany("Applications")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__applicati__count__5629CD9C");

                    b.HasOne("DreamEduConsultancy.Models.Intake", "Intake")
                        .WithMany("Applications")
                        .HasForeignKey("IntakeId")
                        .IsRequired()
                        .HasConstraintName("FK__applicati__intak__571DF1D5");

                    b.HasOne("DreamEduConsultancy.Models.Student", "Student")
                        .WithMany("Applications")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__applicati__stude__5535A963");

                    b.HasOne("DreamEduConsultancy.Models.Subject", "Subject")
                        .WithMany("Applications")
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("FK__applicati__subje__59063A47");

                    b.HasOne("DreamEduConsultancy.Models.University", "University")
                        .WithMany("Applications")
                        .HasForeignKey("UniversityId")
                        .IsRequired()
                        .HasConstraintName("FK__applicati__unive__5812160E");

                    b.Navigation("ApplicationStatus");

                    b.Navigation("Country");

                    b.Navigation("Intake");

                    b.Navigation("Student");

                    b.Navigation("Subject");

                    b.Navigation("University");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.ApplicationReason", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Application", "Application")
                        .WithMany("ApplicationReasons")
                        .HasForeignKey("ApplicationId")
                        .IsRequired()
                        .HasConstraintName("FK__applicati__appli__74AE54BC");

                    b.HasOne("DreamEduConsultancy.Models.VisaReason", "VisaReason")
                        .WithMany("ApplicationReasons")
                        .HasForeignKey("VisaReasonId")
                        .IsRequired()
                        .HasConstraintName("FK__applicati__visaR__75A278F5");

                    b.Navigation("Application");

                    b.Navigation("VisaReason");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.ApplicationUpdateLog", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Application", "Application")
                        .WithMany("ApplicationUpdateLogs")
                        .HasForeignKey("ApplicationId")
                        .IsRequired()
                        .HasConstraintName("FK__applicati__appli__1DB06A4F");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Counselor", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Designation", "Designation")
                        .WithMany("Counselors")
                        .HasForeignKey("DesignationId")
                        .IsRequired()
                        .HasConstraintName("FK__counselor__desig__3C69FB99");

                    b.Navigation("Designation");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.CounselorStudent", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Counselor", "Counselor")
                        .WithMany("CounselorStudents")
                        .HasForeignKey("CounselorId")
                        .IsRequired()
                        .HasConstraintName("FK__counselor__couns__6D0D32F4");

                    b.HasOne("DreamEduConsultancy.Models.Student", "Student")
                        .WithMany("CounselorStudents")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__counselor__stude__6E01572D");

                    b.Navigation("Counselor");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Payment", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Application", "Application")
                        .WithMany("Payments")
                        .HasForeignKey("ApplicationId")
                        .IsRequired()
                        .HasConstraintName("FK__payment__applica__5CD6CB2B");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Student", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Gender", "Gender")
                        .WithMany("Students")
                        .HasForeignKey("GenderId")
                        .IsRequired()
                        .HasConstraintName("FK__student__genderI__5070F446");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.StudentCourse", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__studentCo__cours__68487DD7");

                    b.HasOne("DreamEduConsultancy.Models.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__studentCo__stude__6754599E");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.StudentDocument", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Document", "Document")
                        .WithMany("StudentDocuments")
                        .HasForeignKey("DocumentId")
                        .IsRequired()
                        .HasConstraintName("FK__studentDo__docum__7D439ABD");

                    b.HasOne("DreamEduConsultancy.Models.Student", "Student")
                        .WithMany("StudentDocuments")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__studentDo__stude__7C4F7684");

                    b.Navigation("Document");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.StudentScholarship", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Scholarship", "Scholarship")
                        .WithMany("StudentScholarships")
                        .HasForeignKey("ScholarshipId")
                        .IsRequired()
                        .HasConstraintName("FK__studentSc__schol__06CD04F7");

                    b.HasOne("DreamEduConsultancy.Models.Student", "Student")
                        .WithMany("StudentScholarships")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__studentSc__stude__05D8E0BE");

                    b.Navigation("Scholarship");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.StudentUpdateLog", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Student", "Student")
                        .WithMany("StudentUpdateLogs")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__studentUp__stude__17F790F9");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.University", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Country", "Country")
                        .WithMany("Universities")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__universit__count__4222D4EF");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.UniversityCourse", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Course", "Course")
                        .WithMany("UniversityCourses")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__universit__cours__6383C8BA");

                    b.HasOne("DreamEduConsultancy.Models.University", "University")
                        .WithMany("UniversityCourses")
                        .HasForeignKey("UniversityId")
                        .IsRequired()
                        .HasConstraintName("FK__universit__unive__628FA481");

                    b.Navigation("Course");

                    b.Navigation("University");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.VisaApplication", b =>
                {
                    b.HasOne("DreamEduConsultancy.Models.Application", "Application")
                        .WithMany("VisaApplications")
                        .HasForeignKey("ApplicationId")
                        .IsRequired()
                        .HasConstraintName("FK__visaAppli__appli__00200768");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Application", b =>
                {
                    b.Navigation("ApplicationReasons");

                    b.Navigation("ApplicationUpdateLogs");

                    b.Navigation("Payments");

                    b.Navigation("VisaApplications");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.ApplicationStatus", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Counselor", b =>
                {
                    b.Navigation("CounselorStudents");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Country", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Universities");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Course", b =>
                {
                    b.Navigation("StudentCourses");

                    b.Navigation("UniversityCourses");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Designation", b =>
                {
                    b.Navigation("Counselors");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Document", b =>
                {
                    b.Navigation("StudentDocuments");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Gender", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Intake", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Scholarship", b =>
                {
                    b.Navigation("StudentScholarships");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Student", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("CounselorStudents");

                    b.Navigation("StudentCourses");

                    b.Navigation("StudentDocuments");

                    b.Navigation("StudentScholarships");

                    b.Navigation("StudentUpdateLogs");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.Subject", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.University", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("UniversityCourses");
                });

            modelBuilder.Entity("DreamEduConsultancy.Models.VisaReason", b =>
                {
                    b.Navigation("ApplicationReasons");
                });
#pragma warning restore 612, 618
        }
    }
}
